#!/usr/bin/env perl

use strict;
use warnings;

use Test::More qw(no_plan); # for the is() and isnt() functions
use IPC::Run qw(run);
use FindBin;
my $testee = "$FindBin::Bin/hattr";

sub get_meta() {
    my ($file) = @_;

    my $dump=`getfattr -d '$file'`;

    open my $fh, '<', \$dump;

    my %fields;
    while (<$fh>) {
        next unless m/^[\s]*user.hattr.(md5|htime|state|vtime)="(.*)"[\s]*$/;
        $fields{$1} = $2;
    }

    return %fields;
}

sub hattr {
	my ($file, $mode) = @_;
	run [ $testee, "-$mode", $file ], ">", \my $out or die;
	return $out;
}

# TODO:
# -l    Default: Print some status line
# -v    Verify metadata where it exists
# -a    Combination -n & -v
# -x    Delete all metadata. - THIS NEEDS RETESTING WITH ALL 4 KEYS!
# -e    (export)

my $fs = shift;

&test_nx($fs.'/1 - name with a space.testfile');
&test_nv($fs.'/2 - name with a space.testfile');
&test_a ($fs.'/3 - name with a space.testfile');
#&test_e ($fs.'/4 - name with a space.testfile');

sub test_nx() {
	my ($file) = @_;

	############################################################################
	## Constants/variables

	my $v1 = 'abcdefghijklmnopqrstuvwxyz';
	my $v2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
	my $v3 = '0123456789';

	my $h1 = 'c3fcd3d76192e4007dfb496cca67e13b';
	my $h2 = '437bba8e0bf58337674f4539e75186ac';
	my $h3 = '781e5e245d69b566979b86e28d23f2c7';

	my $out;
	my %meta;
	my $last_htime;

	############################################################################
	## Test body

    system("echo -n '$v1' > '$file'");  # Write content

	%meta = &get_meta($file);
	&is(scalar keys %meta,0);

	$out = &hattr($file, 'n');
	&ok($out =~ /^? (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,2);
	&is($meta{md5},$h1);
	&is(length($meta{htime}),19); # TODO FORMAT CHECK

	$last_htime = $meta{htime};

    system("echo -n '$v2' > '$file'"); # Change content

	sleep(1);
	$out = &hattr($file, 'x');
	&ok($out =~ /^  (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,0);

    system("rm '$file'");
}

sub test_nv() {
	my ($file) = @_;

	############################################################################
	## Constants/variables

	my $v1 = 'abcdefghijklmnopqrstuvwxyz';
	my $v2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';

	my $h1 = 'c3fcd3d76192e4007dfb496cca67e13b';

	my $out;
	my %meta;

	############################################################################
	## Test body

    system("echo -n '$v1' > '$file'");  # Write content

	%meta = &get_meta($file);
	&is(scalar keys %meta,0);

	$out = &hattr($file, 'v');
	&ok($out =~ /^  (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,0);

	$out = &hattr($file, 'n');
	&ok($out =~ /^? (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,2);
	&is($meta{md5},$h1);
	&is(length($meta{htime}),19); # TODO FORMAT CHECK

	my $htime = $meta{htime};

	sleep(1);
	$out = &hattr($file, 'v');
	&ok($out =~ /^V (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,4);
	&is($meta{md5},$h1);
	&is($meta{htime},$htime); # TODO FORMAT CHECK
	&is($meta{state},'V');
	&ok($meta{vtime} gt $meta{htime}); # TODO FORMAT CHECK

	my $last_vtime = $meta{vtime};

    system("echo -n '$v2' > '$file'"); # Change content

	sleep(1);
	$out = &hattr($file, 'v');
	&ok($out =~ /^X (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,4);
	&is($meta{md5},$h1);
	&is($meta{htime},$htime); # TODO FORMAT CHECK
	&is($meta{state},'X');
	&ok($meta{vtime} eq $last_vtime); # TODO FORMAT CHECK

    system("rm '$file'");
}

sub test_a() {
	my ($file1) = @_;
	my $file2 = "$file1.b";
	$file1 .= ".a";

	############################################################################
	## Constants/variables

	my $v1 = 'abcdefghijklmnopqrstuvwxyz';
	my $v2 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
	my $v3 = '0123456789';

	my $h1 = 'c3fcd3d76192e4007dfb496cca67e13b';
	my $h2 = '437bba8e0bf58337674f4539e75186ac';

	my $out;
	my %meta;

	############################################################################
	## Test body

    system("echo -n '$v1' > '$file1'");  # Write content

	%meta = &get_meta($file1);
	&is(scalar keys %meta,0);

	$out = &hattr($file1, 'a');
	&ok($out =~ /^? (.*)\n$/ and $1 eq $file1);

	%meta = &get_meta($file1);
	&is(scalar keys %meta,2);
	&is($meta{md5},$h1);
	&is(length($meta{htime}),19); # TODO FORMAT CHECK

	my $htime = $meta{htime};

    system("echo -n '$v3' > '$file1'");  # Change content
    system("echo -n '$v2' > '$file2'");  # Write content

	%meta = &get_meta($file2);
	&is(scalar keys %meta,0);

	sleep(1);
	$out  =  &hattr($file1, 'a') . &hattr($file2, 'a'); # TODO one call

    my @lines = split /^/,$out;
    &is(scalar @lines,2);
    foreach (@lines) {
        die unless m/^(.?) (.*)$/;
        &is($1,'X') if $2 eq $file1;
        &is($1,'?') if $2 eq $file2;
    }

	%meta = &get_meta($file1);
	&is(scalar keys %meta,3);
	&is($meta{md5},$h1);
	&is($meta{htime},$htime); # TODO FORMAT CHECK
	&is($meta{state},'X');

	%meta = &get_meta($file2);
	&is(scalar keys %meta,2);
	&is($meta{md5},$h2);
	&ok($meta{htime} gt $htime); # TODO FORMAT CHECK

    system("rm '$file1' '$file2'");
}

sub test_e {
	my ($file) = @_;

	############################################################################
	## Constants/variables

	my $v1 = 'abcdefghijklmnopqrstuvwxyz';
	my $h1 = 'c3fcd3d76192e4007dfb496cca67e13b';

	my $out;
	my %meta;

	############################################################################
	## Test body

    system("echo -n '$v1' > '$file'");  # Write content

	%meta = &get_meta($file);
	&is(scalar keys %meta,0);

	$out = &hattr($file, 'e');
	&ok($out =~ /^\?{32} (.*)\n$/ and $1 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,0);

	$out = &hattr($file, 'a');
	&ok($out =~ /^([0-9a-f]{32}) (.*)\n$/ and $1 eq $h1 and $2 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,2);
	&is($meta{md5},$h1);
	&is(length($meta{htime}),19); # TODO FORMAT CHECK

	$out = &hattr($file, 'e');
	&ok($out =~ /^([0-9a-f]{32}) (.*)\n$/ and $1 eq $h1 and $2 eq $file);

	%meta = &get_meta($file);
	&is(scalar keys %meta,2);
	&is($meta{md5},$h1);
	&is(length($meta{htime}),19); # TODO FORMAT CHECK

    system("rm '$file'");
}